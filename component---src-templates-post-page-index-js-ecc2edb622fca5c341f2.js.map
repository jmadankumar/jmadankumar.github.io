{"version":3,"sources":["webpack:///./src/templates/PostPage/index.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./src/helpers/constants.js","webpack:///./src/components/Post/PostAuthor.js","webpack:///./src/components/Post/PostDate.js","webpack:///./src/components/Post/PostTag.js","webpack:///./src/components/Post/PostTags.js","webpack:///./src/components/Post/index.js"],"names":["PostPage","render","post","this","props","data","image","frontmatter","childImageSharp","fixed","src","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","name","title","showHeader","_components_seo__WEBPACK_IMPORTED_MODULE_4__","description","keywords","tags","className","aria-label","href","aria-current","_components_Post__WEBPACK_IMPORTED_MODULE_5__","author","showImage","date","showIcon","key","id","showContent","content","html","Component","propTypes","pageQuery","$export","__webpack_require__","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","constants","ICON_SIZE","NAV_ICON_SIZE","PostAuthor","_ref","react_default","dist","size","PropTypes","isRequired","bool","defaultProps","PostDate","style","marginRight","TAG_COLORS","PostTag","color","_color","Math","floor","random","PostTags","map","Post_PostTag","array","Post","navigate","to","window","location","_this","_this$props","onClick","Post_PostAuthor","Post_PostDate","Post_PostTags","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-templates-post-page-index-js-ecc2edb622fca5c341f2.js","sourcesContent":["import React, { Component } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../../components/layout';\nimport SEO from '../../components/seo';\nimport Post from '../../components/Post';\nimport './post.scss';\n\n\nexport default class PostPage extends Component {\n    render() {\n        const { post } = this.props.data;\n        let image = post.frontmatter.image ? post.frontmatter.image.childImageSharp.fixed.src : '';\n        return (\n            <Layout name={post.frontmatter.title} showHeader={true}>\n                <SEO title={post.frontmatter.title} description={post.frontmatter.description}\n                    keywords={post.frontmatter.tags} />\n                <div className=\"post-page\">\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                            <li className=\"breadcrumb-item\"><a href=\"/blog\">Blog</a></li>\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">{post.frontmatter.title}</li>\n                        </ol>\n                    </nav>\n                    <Post title={post.frontmatter.title} author={post.frontmatter.author}\n                        showImage={!!post.frontmatter.image}\n                        image={image}\n                        date={post.frontmatter.date} tags={post.frontmatter.tags}\n                        showIcon={true} key={post.id}\n                        showContent={true} content={post.html} />\n                </div>\n            </Layout>\n        );\n    }\n}\n\nPostPage.propTypes = {\n\n}\n\nexport const pageQuery = graphql`\n        query PostByPath($path: String!) {\n            post: markdownRemark(frontmatter: {path: {eq: $path}}) {\n                id,\n                frontmatter{\n                  path,\n                  date(formatString:\"DD MMM, YYYY\"),\n                  title,\n                  tags,\n                  description,\n                  author,\n                  image{\n                    childImageSharp{\n                        fixed(width:500){\n                          src\n                        }\n                      }\n                  }\n                },\n                html\n              }\n        }\n    `;\n\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","const constants = {\n    ICON_SIZE: 16,\n    NAV_ICON_SIZE: 20\n};\nexport default constants;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport constants from '../../helpers/constants';\nimport * as FeatherIcon from 'react-feather';\n\nconst PostAuthor = ({ author, showIcon }) => {\n    return (\n        <span className=\"author\">\n            {showIcon && <FeatherIcon.User size={constants.ICON_SIZE} />}\n            {author}\n        </span>);\n};\n\nPostAuthor.propTypes = {\n    author: PropTypes.string.isRequired,\n    showIcon: PropTypes.bool\n};\n\nPostAuthor.defaultProps = {\n    showIcon: false\n}\n\nexport default PostAuthor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport constants from '../../helpers/constants';\nimport * as FeatherIcon from 'react-feather';\n\nconst PostDate = ({ date, showIcon }) => {\n    return (\n        <span className=\"date\" style={{marginRight:'10px'}}>\n            {showIcon && <FeatherIcon.Clock size={constants.ICON_SIZE} />}\n            {date}\n        </span>\n    );\n};\n\nPostDate.propTypes = {\n    date: PropTypes.string.isRequired,\n    showIcon: PropTypes.bool    \n};\n\nPostDate.defaultProps = {\n    showIcon: false    \n}\n\nexport default PostDate;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TAG_COLORS = ['magenta', 'red', 'volcano', 'orange', 'gold', 'lime', 'green',\n    'cyan', 'blue', 'geekblue', 'purple'];\n\nconst PostTag = ({ title, color }) => {\n    let _color = TAG_COLORS[Math.floor(Math.random() * TAG_COLORS.length)] || color;\n\n    return (\n        <span className={`badge badge-${_color} tag`}>\n            #{title}\n        </span>\n    );\n}\n\nPostTag.propTypes = {\n    title: PropTypes.string.isRequired,\n    color: PropTypes.string\n}\n\nexport default PostTag;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostTag from './PostTag';\n\nconst PostTags = ({ tags }) => {   \n    return (\n        <div className=\"\">\n            {tags.map(tag => <PostTag title={tag} key={tag}/>)}\n        </div>\n    );\n}\n\nPostTags.propTypes = {\n    tags: PropTypes.array.isRequired\n}\n\nexport default PostTags;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PostAuthor from './PostAuthor';\nimport PostDate from './PostDate';\nimport PostTags from './PostTags';\n\nclass Post extends Component {\n    navigate(to) {\n        window.location.href = to;\n    }\n    render() {\n        const { showImage, image, author, date, tags, description, showIcon, title, to, showContent, content } = this.props;\n        return (\n            <div className=\"card post\" onClick={() => this.navigate(to)}>\n                {showImage && (<div className=\"card-image-top image\">\n                    <img src={image} />\n                </div>)}\n                <div className=\"card-body\">\n                    <h4 className=\"card-title\">\n                        {title}\n                    </h4>\n                    <h6 className=\"card-subtitle mb-2 text-muted\">\n                        <PostAuthor author={author} showIcon={showIcon} />\n                        <PostDate date={date} showIcon={showIcon} />\n                    </h6>\n                    <PostTags tags={tags} />\n                    {showContent && <div dangerouslySetInnerHTML={{ __html: content }}></div>}\n                </div>\n            </div>);\n    }\n}\n\nPost.propTypes = {\n    showImage: PropTypes.bool,\n    image: PropTypes.string,\n    author: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    tags: PropTypes.array,\n    showIcon: PropTypes.bool,\n    description: PropTypes.string,\n    title: PropTypes.string,\n    to: PropTypes.string.isRequired,\n    showContent: PropTypes.bool,\n    content: PropTypes.string\n};\n\nPost.defaultProps = {\n    showImage: false,\n    image: '',\n    showIcon: false\n}\n\nexport default Post;"],"sourceRoot":""}